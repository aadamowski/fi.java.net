<!-- Use Docbook -> HTML to generate HTML output -->
<section>
    <title>Japex</title>
    <section>
        <title>Introduction</title>
        <para> Japex is a simple yet powerful tool to write Java-based micro-benchmarks. It is
            similar in spirit to JUnit [reference?] in that if factors out most of the repetitive
            programming logic that is necessary to run micro-benchmarks. This logic includes loading
            and initializing multiple drivers, warming up the VM, timing the inner loop, etc.</para>
        <para/>
        <para> The input to Japex is an XML file describing a test suite. The output is a
            timestamped report available in both XML and HTML formats (although generation of the
            latter can be turned off). HTML reports include one or more bar charts which graphically
            display the data for ease of comparison. </para>
        <para>In the context of this document, the term throughput is defined to be work over time.
            Japex is designed to estimate an independent throughput for each of the tests in the
            suite. Throughput estimation is done based on some parameters defined in the input file.
            There are basically two ways to specify that: (i) fix the amount of work and estimate
            time or (ii) fix the amount of time and estimate work. In addition to each test's
            individual throughput, aggregate throughtputs in the form of arithmetic, geometric and
            harmonic means are computed for each driver (see below for a description of a driver). </para>
    </section>
    <section>
        <title>Test Suites</title>
        <para>Test suites are described using a single configuration file written in XML. This file
            includes information such as runtime class path, drivers and test cases. A driver
            encapsulates knowledge about a specific algorithm implementation, and thus a different
            driver is required for each implementation under test. For example, if XML parsing is
            the algorithm under test and parsers X, Y and Z are being evaluated, a different driver
            must be provided for each implementation. </para>
        <para> A sample configuration file is shown below: <example>
                <title>Sample Configuration File</title>
                <programlisting>
            <![CDATA[
            <testSuite name="ParsingPerformance" xmlns="http://www.sun.com/japex/testSuite">
                <param name="libraryDir" value="lib"/>
                <param name="japex.classPath" value="${libraryDir}/../dist/classes"/>
                
                <param name="japex.warmupIterations" value="100"/>
                <param name="japex.runIterations" value="200"/>
                
                <driver name="XDriver">
                    <param name="Description" value="Driver for X parser"/>
                </driver>
                <driver name="YDriver">
                    <param name="Description" value="Driver for Y parser"/>
                </driver>
                <driver name="ZDriver">
                    <param name="Description" value="Driver for Z parser"/>
                </driver>
                
                <testCase name="file1.xml">
                    <param name="xmlfile" value="data/file1.xml"/>
                </testCase>
                <testCase name="file2.xml">
                    <param name="xmlfile" value="data/file2.xml"/>
                </testCase>
            </testSuite>
            ]]>
                </programlisting>
            </example>
        </para>
        <para> A test suite's configuration file is defined as a sequence of zero or more global
            parameters followed by a sequence of one or more drivers and then followed by a sequence
            of one or more test cases [see testsuite.xsd for details]. Correspondingly, there are
            three kinds of parameters: global, driver and test case paremeters. Parameters whose
            names start with the string "japex." are reserved and assigned specific meanings by
            Japex. For example, setting "japex.runIterations" to "200" will result in all test cases
            of the test suite to be executed 200 times. A list of reserved global parameters is
            included in Section [???]. </para>
    </section>
    <section>
        <title>Execution Phases</title>
        <para>prepare, warmup, run phases description. </para>
    </section>
    <section>
        <title>Global Parameter Reference</title>
        <itemizedlist>
            <listitem>
                <para> japex.numberOfThreads: Number of threads to use during the run phase of the
                    test. Note that this is the number of threads that will be created prior to the
                    execution of each test. If iterations (i.e., work) is specified instead of time
                    as the means to compute throughput, each thread will carry out floor(iterations
                    / japex.numberOfThreads). This adjustment is necesssary to make the output of a
                    single-threaded run be comparable to that of multi-threaded run. DEFAULT: 1,
                    TYPE: input. </para>
            </listitem>
            <listitem>
                <para> japex.warmupIterations: Number of iterations used to warm up the VM prior to
                    executing each test. DEFAULT: 300, TYPE: input. </para>
            </listitem>
            <listitem>
                <para> japex.runIterations: Number of iterations used to execute each test. DEFAULT:
                    300, TYPE: input. </para>
            </listitem>
            <listitem>
                <para> japex.warmupTime: Number of hours, minutes and seconds to warm up the VM
                    prior to executing each test. Specified as a string in the format
                    "((HH:)?MM:)?S?S". Takes precedence over japex.warumpIterations if both are
                    specified. UNIT: second, DEFAULT: undefined, TYPE: input.</para>
            </listitem>
            <listitem>
                <para> japex.runTime: Number of hours, minutes and seconds to execute each test to
                    warm up the VM prior to executing the test. Specified as a string in the format
                    "((HH:)?MM:)S?S". Takes precedence over japex.runIterations if both are
                    specified. UNIT: second, DEFAULT: undefined, TYPE: input.</para>
            </listitem>
            <listitem>
                <para> japex.classPath: Runtime class path needed to load drivers and related
                    libraries. Can be defined multiple times, with each new definition taken as an
                    addition to the runtime class path. Thus, only a single class path entry is
                    allowed per definition (i.e., path separators are not allowed). DEFAULT: empty,
                    TYPE: input.</para>
            </listitem>
            <listitem>
                <para> japex.throughputUnit: The throughput's unit used in this test. May be set
                    programmatically. DEFAULT: "TPS", TYPE: input.</para>
            </listitem>
            <listitem>
                <para> japex.version: Version of Japex used in the run. TYPE: output.</para>
            </listitem>
            <listitem>
                <para> japex.osName: Name of the operating system. TYPE: output.</para>
            </listitem>
            <listitem>
                <para> japex.osArchitecture: Name of the operating system architecture. TYPE: output.</para>
            </listitem>
            <listitem>
                <para> japex.vmInfo: Virtual machine information. TYPE: output.</para>
            </listitem>
            <listitem>
                <para> japex.dateTime: Timestamp of the run. This value is also used to create a
                    unique directory in which the reports are stored. TYPE: output.</para>
            </listitem>
        </itemizedlist>
    </section>
    <section>
        <title>Driver Parameter Reference</title>
        <itemizedlist>
            <listitem>
                <para> japex.driverClass: Name of Java class that implements a driver. If absent,
                    the driver's name [see schema] is used instead. DEFAULT: undefined, TYPE: input. </para>
            </listitem>
            <listitem>
                <para> japex.throughputAritMean: Arithmetic mean (average) for all test case
                    throughputs estimated for this driver. TYPE: output. </para>
            </listitem>
            <listitem>
                <para> japex.throughputGeomMean: Geometric mean of all test case throughputs
                    estimated for this driver. TYPE: output. </para>
            </listitem>
            <listitem>
                <para> japex.throughputHarmMean: Harmonic mean of all test case throughputs
                    estimated for this driver. TYPE: output. </para>
            </listitem>
        </itemizedlist>
    </section>
    <section>
        <title>Test Case Parameter Reference</title>
        <para> The parameters japex.warmupIterations, japex.runIterations, japex.warmupTime and
            japex.runTime are pre-defined for each test and initialized using the global
            environment. It is also possible to indepently re-define these parameters for each test.
            If japex.warmupTime or japex.runTime are defined, then Japex will compute and actual
            value for japex.warmupIterations and japex.runIterations, respectively (thus, although
            the corresponding global parameters are of input kind, the test case versions are
            input/output kind).</para>
        <itemizedlist>
            <listitem>
                <para> japex.prepareElapsedTime: Actual number of milliseconds spent during the
                    prepare phase for this test. UNIT: millisecond, TYPE: output.</para>
            </listitem>
            <listitem>
                <para> japex.warmupElapsedTime: Actual number of milliseconds spent during the
                    warmup phase for this test. Always greater or equal to japex.warmupTime times
                    1000. UNIT: millisecond, TYPE: output.</para>
            </listitem>
            <listitem>
                <para> japex.runElapsedTime: Actual number of milliseconds spent during the run
                    phase for this test. Always greater or equal to japex.runTime times 1000. UNIT:
                    millisecond, TYPE: output.</para>
            </listitem>
        </itemizedlist>
    </section>
    <!-- Explain the different types of means computed by Japex -->
    <section>
        <title>References</title>
        <itemizedlist>
            <listitem>
                <para>
                    <ulink
                        url="http://java.sun.com/developer/technicalArticles/WebServices/fastWS/">Fast
                        Web Services</ulink>
                </para>
            </listitem>
        </itemizedlist>
    </section>
</section>
