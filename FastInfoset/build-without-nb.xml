<project name="FastInfoset" default="dist" basedir=".">

    <!-- initialize build properties -->
    <property file="${basedir}/build.properties" />

    <property name="app.jar" value="${ant.project.name}.jar"/>

    <path id="compile.class.path">
        <pathelement location="${jsr173_api.jar}"/>
    </path>

    <!-- task that generates a manifest file -->
    <macrodef name="createManifest">
        <attribute name="version"/>
        <attribute name="manifestDir"/>
        <attribute name="extensionName"/>
        <attribute name="file"/>
      <sequential>
        <copy tofile="@{file}"
            file="@{manifestDir}/manifest.mf"
            overwrite="yes"/>
        <replace file="@{file}">
            <replacefilter token="@@@@IMPL_VERSION@@@@"
                   value="@{version}"/>
            <replacefilter token="@@@@VENDOR_ID@@@@"
                   value="com.sun"/>
            <replacefilter token="@@@@EXTENSION_NAME@@@@"
                   value="@{extensionName}"/>
            <replacefilter token="@@@@BUILD_ID@@@@"
                   value="${build.id}"/>
        </replace>
        </sequential>
    </macrodef>

    <target name="prepare">
        <tstamp>
            <format property="now" pattern="MM/dd/yyyy hh:mm aa" unit="hour"/>
        </tstamp>
        <property name="build.id" value="${now}(${user.name})" />
        <property name="build.version" value="${release.impl.version}-${build.id}" />
        <echo message="The build id is: ${build.version}" />

	<tstamp>
	    <format property="TSTAMP" pattern="hhmmss"/>
	</tstamp>
        <mkdir dir="${build.dir}/classes"/>
        <mkdir dir="${runtime.build.dir}/classes"/>
        <mkdir dir="${dist.dir}"/>
        <mkdir dir="${package.dir}"/>
    </target>

    <target name="clean">
        <delete quiet="true" dir="${dist.dir}"/>
        <delete dir="${build.dir}"/>
        <delete dir="${runtime.build.dir}"/>
    </target>

    <target name="compile" depends="prepare">
        <!-- Compile the FI classes -->
        <javac source="1.4" target="1.4" srcdir="src" destdir="${build.dir}/classes"
            debug="on" optimize="on" deprecation="on">
            <classpath refid="compile.class.path"/>
        </javac>
        <mkdir dir="${build.dir}/classes/com/sun/xml/fastinfoset/resources"/>
	<copy todir="${build.dir}/classes/com/sun/xml/fastinfoset/resources">
	    <fileset dir="src/com/sun/xml/fastinfoset/resources">
		<include name="*.properties"/>
	    </fileset>
	</copy>
        
        <!-- Compile the FI runtime classes -->
        <javac source="1.4" target="1.4" srcdir="${runtime.src.dir}" 
            destdir="${runtime.build.dir}/classes"
            debug="on" optimize="on" deprecation="on">
        </javac>
    </target>

    <target name="dist" depends="compile">
        <!-- Build the FI jar -->
	<createManifest version="${release.impl.version}"
                manifestDir="${manifest.root}" 
                file="${basedir}/build/manifest.rt"
                extensionName="com.sun.xml.fastinfoset" />
        <jar jarfile="${dist.dir}/${app.jar}"
		basedir="${build.dir}/classes"
		manifest="${basedir}/build/manifest.rt"/>
	<zip destfile="${dist.dir}/FastInfoset.src.zip">
            <fileset dir="src">
                <include name="**/*"/>
            </fileset>
	</zip>
        
        <!-- Build the FI runtime jar -->
	<createManifest version="${runtime.release.impl.version}"
                manifestDir="${runtime.manifest.root}" 
                file="${runtime.build.dir}/manifest.rt"
                extensionName="com.sun.fastinfoset.runtime" />
        <jar jarfile="${dist.dir}/fastinfoset-runtime.jar"
		basedir="${runtime.build.dir}/classes"
                manifest="${runtime.build.dir}/manifest.rt"/>
	<zip destfile="${dist.dir}/fastinfoset-runtime.src.zip">
            <fileset dir="${runtime.src.dir}">
                <include name="**/*"/>
            </fileset>
	</zip>        
    </target>    
    
    
    <path id="compile-test.class.path">
        <path refid="compile.class.path"/>
        <pathelement location="${dist.dir}/${app.jar}"/>
        <pathelement location="${junit.jar}"/>
    </path>
        
    <target name="prepare-test">
        <mkdir dir="${build.dir}/test/classes"/>
        <mkdir dir="${build.dir}/test/results"/>
    </target>
        
    <target name="compile-test" depends="prepare-test, dist">
        <javac source="1.4" srcdir="test" destdir="${build.dir}/test/classes"
		debug="on" optimize="on" deprecation="on">
            <classpath refid="compile-test.class.path"/>
        </javac>
	<copy todir="${build.dir}/test/classes">
	    <fileset dir="test">
		<include name="X.finf/**"/>
	    </fileset>
	</copy>
    </target>

    <path id="test.class.path">
        <path refid="compile.class.path"/>
        <pathelement location="${dist.dir}/${app.jar}"/>
        <pathelement location="${build.dir}/test/classes"/>
    </path>
        
    <target name="test" depends="compile-test">
	<junit printsummary="yes" fork="yes" dir="test">
		<classpath refid="test.class.path"/>
		<formatter type="plain"/>
	    <batchtest todir="${build.dir}/test/results">
		<fileset dir="test">
		    <include name="**/*Test*.java"/>
		</fileset>
	    </batchtest>
	</junit>
    </target>        
        
    <path id="compile-runtime-test.class.path">
        <path refid="compile.class.path"/>
        <pathelement location="${dist.dir}/fastinfoset-runtime-j2se.jar"/>
        <pathelement location="${junit.jar}"/>
    </path>
        
    <target name="prepare-runtime-test">
        <mkdir dir="${runtime.build.dir}/test/classes"/>
        <mkdir dir="${runtime.build.dir}/test/results"/>
    </target>
        
    <target name="compile-runtime-test" depends="prepare-runtime-test, dist-for-j2se">
        <javac source="1.4" srcdir="runtime/test" destdir="${runtime.build.dir}/test/classes"
		debug="on" optimize="on" deprecation="on">
            <classpath refid="compile-runtime-test.class.path"/>
        </javac>
    </target>

    <path id="runtime-test.class.path">
        <path refid="compile.class.path"/>
        <pathelement location="${dist.dir}/${app.jar}"/>
        <pathelement location="${dist.dir}/fastinfoset-runtime.jar"/>
        <pathelement location="${runtime.build.dir}/test/classes"/>
    </path>
    
    <target name="runtime-test" depends="compile-runtime-test">
	<junit printsummary="yes" fork="yes" dir="runtime/test">
            <classpath refid="runtime-test.class.path"/>
            <formatter type="plain"/>
	    <batchtest todir="${runtime.build.dir}/test/results">
		<fileset dir="runtime/test">
		    <include name="**/*Test*.java"/>
		</fileset>
	    </batchtest>
	</junit>
    </target>        
    
    <target name="testAll" depends="test, runtime-test"/>
    
    
    <target name="dist-for-j2se" depends="dist">
        <mkdir dir="build-j2se/classes"/>
        <copy todir="build-j2se/classes/1.0">
            <fileset dir="build/classes">
                <include name="**/*.class"/>
                <exclude name="com/sun/xml/fastinfoset/stax/events/*.class"/>
                <exclude name="com/sun/xml/fastinfoset/stax/factory/*.class"/>
                <exclude name="com/sun/xml/fastinfoset/stax/util/*.class"/>
                <exclude name="com/sun/xml/fastinfoset/tools/*.class"/>
                <exclude name="org/jvnet/fastinfoset/sax/helpers/*.class"/>
            </fileset>
        </copy>
        <jar jarfile="${dist.dir}/${ant.project.name}-j2se.jar"
		basedir="build-j2se/classes"/>
        <delete dir="build-j2se"/>
        
        <mkdir dir="build-j2se-runtime/classes"/>
        <copy todir="build-j2se-runtime/classes">
            <fileset dir="${runtime.build.dir}/classes">
                <include name="**/*.class"/>
            </fileset>
        </copy>
        <copy todir="build-j2se-runtime/classes/com/sun/fastinfoset/runtime" 
                file="runtime/etc/runtime.properties"/>
        <jar jarfile="${dist.dir}/fastinfoset-runtime-j2se.jar"
		basedir="build-j2se-runtime/classes"/>
        <delete dir="build-j2se-runtime"/>
    </target>
    
    <path id="j2se-runtime-test.class.path">
        <path refid="compile.class.path"/>
        <pathelement location="${dist.dir}/fastinfoset-runtime-j2se.jar"/>
        <pathelement location="${dist.dir}/FastInfoset-j2se.jar"/>
        <pathelement location="${runtime.build.dir}/test/classes"/>
    </path>
        
    <target name="j2se-runtime-test" depends="compile-runtime-test">
	<junit printsummary="yes" fork="yes" dir="runtime/test">
            <classpath refid="j2se-runtime-test.class.path"/>
            <formatter type="plain"/>
	    <batchtest todir="${runtime.build.dir}/test/results">
		<fileset dir="runtime/test">
		    <include name="**/*Test*.java"/>
		</fileset>
	    </batchtest>
	</junit>
    </target>        

    <target name="testAll-j2se" depends="testAll, j2se-runtime-test"/>
    
    
    <target name="doc" depends="dist">
        <javadoc source="1.4"
		sourcepath="src"
		packagenames="com.sun.xml.fastinfoset.*, org.jvnet.fastinfoset.*"
		destdir="${dist.dir}/javadoc"
		version="true">
            <classpath refid="compile.class.path"/>
	</javadoc>
    </target>

    <target name="package-contents" depends="doc">
	<copy todir="${package.dir}/${ant.project.name}_${release.impl.version}_${DSTAMP}_${TSTAMP}">
	    <fileset dir="dist">
		<include name="javadoc/**"/>
	    </fileset>
	    <fileset dir="${basedir}">
		<include name="README-PACKAGE.txt"/>
		<include name="XERCES-APACHE-1.1-license.txt"/>
		<include name="bin/*"/>
		<include name="lib/*.jar"/>
		<include name="${dist.dir}/${app.jar}"/>
	    </fileset>
	    <fileset dir="${basedir}/..">
		<include name="LICENSE.txt"/>
	    </fileset>
	</copy>
    </target>

    <target name="package" depends="package-contents">
	<zip destfile="${package.dir}/${ant.project.name}_${release.impl.version}_${DSTAMP}_${TSTAMP}.zip">
	    <fileset dir="${package.dir}">
		<include name="${ant.project.name}_${release.impl.version}_${DSTAMP}_${TSTAMP}/**"/>
	    </fileset>                
	</zip>
    </target>

     <property name="wspack.home" value="fi-wspack" />

    <!-- target that would be invoked from wspack build -->
    <target name="wspack" depends="dist" >
	<mkdir dir="${wspack.home}" />
	<mkdir dir="${wspack.home}/lib" />
	<copy file="${dist.dir}/${app.jar}"
	    todir="${wspack.home}/lib" />

	<!-- docs content -->
	<mkdir dir="${wspack.home}/docs" />
	<copy todir="${wspack.home}/docs" >
	    <fileset dir="${basedir}/docs" />
	</copy>
    </target>


  <!-- BEGIN: Packaging related   -->

  <property name="dist.home" value="${dist.dir}" />

  <property name="pkg.version" value="${release.impl.version}"/>
  <property name="rpm.version" value="${release.impl.version}"/>
  <property name="rpm.release" value="2"/>
  <property name="zip.release" value="1"/>

  <!-- The package name -->
  <property name="pkg.fastinfoset"    value="SUNWfastinfoset"/>

   <!-- The package product name -->
  <property name="pkg.prod.name"    value="Sun Java(TM) Enterprise System"/>

  <!-- The package product version -->
  <property name="pkg.prod.version"    value="5"/>

  <!-- The package build directory -->
  <property name="pkg.build.dir"    value="${build.home}/pkg"/>

  <!-- The package distribution directory -->
  <property name="pkg.release.dir"    value="${basedir}/pkg-dist"/>

  <!-- The hpux build directory -->
  <property name="hpux.build.dir"    value="${build.home}/hpux/fi"/>

  <!-- The hpux distribution directory -->
  <property name="hpux.release.dir"    value="${basedir}/hpux-dist"/>

  <!-- The rpm build directory -->
  <property name="rpm.build.dir"    value="${build.home}/rpm/FASTINFOSET"/>

  <!-- The rpm distribution directory -->
  <property name="rpm.release.dir"    value="${basedir}/rpm-dist"/>

  <!-- The zip build directory -->
  <property name="zip.build.dir"    value="${build.home}/zip"/>

  <!-- The zip distribution directory -->
  <property name="zip.release.dir"    value="${basedir}/zip-dist"/>

  <!-- The SJSXP (StAX RI) distribution directory -->
  <property name="sjsxp.build" value="${basedir}" />

  <!-- =====================
       SVR4 PKG DISTRIBUTION
       ===================== -->
  <!-- assumes the dist target has been run -->
  <target name="create.pkg" description="Create Fast Infoset package">

    <!-- copy pkginfo.tmpl to pkginfo in build dir and replace variables -->
    <copy tofile="${pkg.build.dir}/${pkg.fastinfoset}/pkginfo" file="${basedir}/pkg/${pkg.fastinfoset}/pkginfo.tmpl"
      overwrite="yes"/>

    <!-- replace architecture value
    <exec executable="mach" failonerror="true" outputproperty="arch">
    </exec>
    -->

    <replace file="${pkg.build.dir}/${pkg.fastinfoset}/pkginfo" value="all">
      <replacetoken>@arch@</replacetoken>
    </replace>

    <!-- replace date stamp... 1st specify correct format  -->
    <tstamp>
      <format property="pkg.datestamp" pattern="yyyy.MM.dd.hh.mm"/>
    </tstamp>

    <replace file="${pkg.build.dir}/${pkg.fastinfoset}/pkginfo" value="${pkg.datestamp}">
      <replacetoken>@datestamp@</replacetoken>
    </replace>

    <!-- replace fast infoset version -->
    <replace file="${pkg.build.dir}/${pkg.fastinfoset}/pkginfo" value="${pkg.version}">
      <replacetoken>@fastinfoset.version@</replacetoken>
    </replace>

    <!-- replace product version -->
    <replace file="${pkg.build.dir}/${pkg.fastinfoset}/pkginfo" value="${pkg.prod.version}" >
      <replacetoken>@prod.version@</replacetoken>
    </replace>

    <!-- replace product name -->
    <replace file="${pkg.build.dir}/${pkg.fastinfoset}/pkginfo" value="${pkg.prod.name}">
      <replacetoken>@prod.name@</replacetoken>
    </replace>

    <!-- copy prototype, depend, copyright, installation script files -->
    <copy todir="${pkg.build.dir}/${pkg.fastinfoset}" overwrite="yes">
      <fileset dir="${basedir}/pkg/${pkg.fastinfoset}">
        <include name="prototype*"/>
        <include name="depend"/>
        <include name="copyright"/>
      </fileset>
    </copy>

    <!-- copy fast infoset specific jar files into the right directory structure -->
    <echo message="Copying FastInfoset.jar to proper directory" />
    <copy todir="${pkg.build.dir}/${pkg.fastinfoset}/SUNWjax/share/lib" overwrite="yes">
      <fileset dir="${dist.home}">
        <include name="FastInfoset.jar"/>
      </fileset>
    </copy>

    <!-- copy fast infoset dependent jar files into the right directory structure 
    <echo message="Copying sjsxp dependent jar file to proper directory" />
    <copy todir="${pkg.build.dir}/${pkg.fastinfoset}/SUNWjax/share/lib" overwrite="yes">
      <fileset dir="${sjsxp.build}/lib">
        <include name="jsr173_api.jar"/>
      </fileset>
    </copy>
    -->

    <!-- make output directory -->
    <mkdir dir="${pkg.release.dir}"/>

    <!-- run pkgmk -f prototype_sparc -d tmp_dir -o PKGNAME -->
    <exec executable="pkgmk" failonerror="true"
     dir="${pkg.build.dir}/${pkg.fastinfoset}">
      <arg value="-f"/>
      <arg value="prototype_sparc"/>
      <arg value="-d"/>
      <arg value="${pkg.release.dir}"/>
      <arg value="-r"/>
      <arg value="."/>
      <arg value="-o"/>
      <arg value="${pkg.fastinfoset}"/>
    </exec>

  </target>


  <!-- =====================
         RPM DISTRIBUTION
       ===================== -->
  <!-- assumes the dist target has been called -->
  <target name="create.rpm" description="Create Fast Infoset rpm">

    <!-- assign prefix of where files will be installed on system -->
    <property name="rpm.install.base"    value="/opt/sun"/>

    <!-- make sure this directory is initially clean -->
    <delete dir="${rpm.build.dir}/SOURCES"/>

    <!-- Create build subdirectories -->
    <mkdir dir="${rpm.build.dir}/BUILD"/>
    <mkdir dir="${rpm.build.dir}/RPMS"/>
    <mkdir dir="${rpm.build.dir}/SOURCES"/>
    <mkdir dir="${rpm.build.dir}/SPECS"/>
    <mkdir dir="${rpm.build.dir}/SRPMS"/>

    <!-- copy template spec file to spec file in build dir and replace variables -->
    <copy tofile="${rpm.build.dir}/SPECS/FASTINFOSET.spec" file="${basedir}/rpm/FASTINFOSET.spec.tmpl"
      overwrite="yes"/>

    <!-- replace FastInfoset version -->
    <replace file="${rpm.build.dir}/SPECS/FASTINFOSET.spec" value="${rpm.version}">
      <replacetoken>@fastinfoset.version@</replacetoken>
    </replace>

    <!-- replace fastinfoset release -->
    <replace file="${rpm.build.dir}/SPECS/FASTINFOSET.spec" value="${rpm.release}">
      <replacetoken>@fastinfoset.release@</replacetoken>
    </replace>

    <!-- replace product name -->
    <replace file="${rpm.build.dir}/SPECS/FASTINFOSET.spec" value="${pkg.prod.name}">
      <replacetoken>@prod.name@</replacetoken>
    </replace>

    <!-- replace build dir  -->
    <replace file="${rpm.build.dir}/SPECS/FASTINFOSET.spec" value="${rpm.build.dir}">
      <replacetoken>@build.dir@</replacetoken>
    </replace>

    <!-- replace prefix value  -->
    <replace file="${rpm.build.dir}/SPECS/FASTINFOSET.spec" value="${rpm.install.base}">
      <replacetoken>@install.prefix@</replacetoken>
    </replace>

    <!-- copy fastinfoset specific jar files into the right directory structure -->
    <copy todir="${rpm.build.dir}/SOURCES/sun-fastinfoset-${rpm.version}${rpm.install.base}/share/lib" overwrite="yes">
      <fileset dir="${dist.home}">
        <include name="FastInfoset.jar"/>
      </fileset>
    </copy>

    <!-- copy fastinfoset dependent jar files into the right directory structure 
    <copy todir="${rpm.build.dir}/SOURCES/sun-fastinfoset-${rpm.version}${rpm.install.base}/share/lib" overwrite="yes">
      <fileset dir="${sjsxp.build}/lib">
        <include name="jsr173_api.jar"/>
      </fileset>
    </copy>
    -->

    <!-- compress fastinfoset files -->
    <tar destfile="${rpm.build.dir}/SOURCES/sun-fastinfoset-${rpm.version}.tar" basedir="${rpm.build.dir}/SOURCES"/>

    <!-- build rpm -->
    <exec executable="rpmbuild" failonerror="true"
     dir="${rpm.build.dir}">
      <arg value="-bb"/>
      <arg value="SPECS/FASTINFOSET.spec"/>
    </exec>

    <!-- make output directory -->
    <mkdir dir="${rpm.release.dir}"/>

    <!-- copy rpm to dist directory -->
    <copy todir="${rpm.release.dir}">
      <fileset dir="${rpm.build.dir}/RPMS"/>
    </copy>

  </target>


 <!-- =======================
       HPUX FILE DISTRIBUTION 
      ======================= -->
  <!-- assumes the dist target has been called -->
	<target name="create.hpux" description="Create JAX-WS HPUX package" >

    <!-- copy template spec file to spec file in build dir and replace variables -->
    <copy tofile="${hpux.build.dir}/sun-fastinfoset.psf" file="${basedir}/hpux/sun-fastinfoset.psf.tmpl" overwrite="yes"/>

    <!-- replace fastinfoset version -->
    <replace file="${hpux.build.dir}/sun-fastinfoset.psf" value="${release.impl.version}">
      <replacetoken>@fi.version@</replacetoken>
    </replace>

    <!-- replace date stamp... 1st specify correct format  -->
    <tstamp>
      <format property="pkg.datestamp" pattern="yyyy.MM.dd.hh.mm"/>
    </tstamp>
    <replace file="${hpux.build.dir}/sun-fastinfoset.psf" value="${pkg.datestamp}">
      <replacetoken>@datestamp@</replacetoken>
    </replace>

    <!-- replace libdir  -->
    <replace file="${hpux.build.dir}/sun-fastinfoset.psf" value="${dist.home}">
      <replacetoken>@libdir@</replacetoken>
    </replace>

    <!-- make output directory -->
    <mkdir dir="${hpux.release.dir}/sun-fastinfoset"/>

    <!--  -->
	<exec  executable="/usr/sbin/swpackage" failonerror="true">
      <arg line="-x follow_symlinks=true -x compression_type=gzip -x compress_cmd=/usr/contrib/bin/gzip -x uncompress_files=false -x compress_files=true -x reinstall_files=true -x package_in_place=false -x target_type=directory -x write_remote_files=true -x run_as_superuser=false -s ${hpux.build.dir}/sun-fastinfoset.psf @ ${hpux.release.dir}/sun-fastinfoset"/>
	 </exec>

   </target>


  <!-- =======================
       ZIP FILE DISTRIBUTION
       ======================= -->
  <!-- assumes the dist target has been called -->
  <target name="create.zip" description="Create FastInfoset zip file distribution for windows">

    <!-- make build and output directories -->
    <mkdir dir="${zip.build.dir}"/>
    <mkdir dir="${zip.release.dir}"/>

    <copy todir="${zip.build.dir}" overwrite="yes">
      <fileset dir="${basedir}/zip">
        <include name="filelist.txt"/>
        <include name="version"/>
      </fileset>
    </copy>

    <!-- replace parameters in version file  -->
    <replace file="${zip.build.dir}/version" value="${release.impl.version}">
      <replacetoken>@fi.version@</replacetoken>
    </replace>
    <!-- replace date stamp... 1st specify correct format  -->
    <tstamp>
      <format property="pkg.datestamp" pattern="yyyyMMdd"/>
    </tstamp>
    <replace file="${zip.build.dir}/version" value="${pkg.datestamp}">
      <replacetoken>@datestamp@</replacetoken>
    </replace>
    <replace file="${zip.build.dir}/version" value="${zip.release}">
      <replacetoken>@zip.release@</replacetoken>
    </replace>

    <!-- copy FastInfoset specific jar files into the right directory structure -->
    <copy todir="${zip.build.dir}/fastinfoset/lib" overwrite="yes">
      <fileset dir="${dist.home}">
        <include name="FastInfoset.jar"/>
      </fileset>
    </copy>

    <!-- make zip file -->
    <zip destfile="${zip.release.dir}/fastinfoset.zip" basedir="${zip.build.dir}" whenempty="fail"/>


  </target>




<!-- END: Packaging related  -->

</project>
